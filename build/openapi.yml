openapi: 3.0.0
info:
  version: 0.0.1
  title: PMF API Docment
servers:
  - url: 'http://api.pmf.com'
paths:
  '/accounts/{accounts_id}/actions':
    post:
      tags:
        - アクション履歴
      description: 指定のアカウントに対するアクション履歴を作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_relation_id:
                  type: string
                  description: アカウント同士の関連性ID
                  example: 0a1b2c3d4e5f6g7
                recomend_action_id:
                  type: string
                  description: アクション候補ID
                  example: 0a1b2c3d4e5f6g7
                view_date:
                  type: string
                  description: 表示した日付
                  example: 2022/01/01
                action_date:
                  type: string
                  description: 実行した日付
                  example: 2022/01/02
              required:
                - account_relation_id
                - recomend_action_id
                - view_date
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Action'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/accounts/{accounts_id}/actions?offset=10&limit=10&order=asc':
    get:
      tags:
        - アクション履歴
      description: 指定のアカウントに対するアクション履歴一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: accounts_id
          schema:
            type: string
          required: true
          description: accountのID
        - in: query
          name: offset
          schema:
            type: integer
          description: 何件目から取得するか
        - in: query
          name: limit
          schema:
            type: integer
          description: 何件取得するか
        - in: query
          name: order
          schema:
            type: string
          description: 昇順(asc) or 降順(desc)
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/Action'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/accounts/{accounts_id}/actions/{actions_id}':
    put:
      tags:
        - アクション履歴
      description: 指定のアカウントに対する指定のアクション情報を更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: accounts_id
          schema:
            type: string
          required: true
          description: accountのID
        - in: path
          name: actions_id
          schema:
            type: string
          required: true
          description: actionのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action_date:
                  type: string
                  description: 実行した日付
                  example: 2022/01/02
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Action'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/actions/{actions_id}/feedbacks':
    get:
      tags:
        - フィードバック
      description: 特定のアクションに対するフィードバック一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/Feedback'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - フィードバック
      description: 特定のアクションに対するフィードバックを作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action_id:
                  type: string
                  description: actionID
                  example: 0a1b2c3d4e5f6g7
                feedback_id:
                  type: string
                  description: feedbackID
                  example: 0a1b2c3d4e5f6g7
                account_id:
                  type: string
                  description: feedbackしたアカウントID
                  example: 0a1b2c3d4e5f6g7
                contents:
                  type: string
                  description: feedback内容
                  example: よかったです。
              required:
                - action_id
                - feedback_id
                - contents
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Feedback'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/actions/{actions_id}/feedbacks/{feedbacks_id}':
    put:
      tags:
        - フィードバック
      description: 特定のアクションに対するフィードバックを更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: feedbackのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contents:
                  type: string
                  description: feedback内容
                  example: よかったです。
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Feedback'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    delete:
      tags:
        - フィードバック
      description: 特定のアクションに対するフィードバックを削除する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: feedbackのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: 削除成功
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /account_relations:
    get:
      tags:
        - アカウントの関連性
      description: 現在ログインしているアカウントに関連するつながりをすべて取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/AccountRelation'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - アカウントの関連性
      description: アカウントの関連性情報を作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                manager_account_id:
                  type: string
                  description: 上司のアカウントID
                  example: 0a1b2c3d4e5f6g7
                member_account_id:
                  type: string
                  description: 部下のアカウントID
                  example: 0a1b2c3d4e5f6g7
                activated:
                  type: boolean
                  description: つながりを許可したか
                  example: true
              required:
                - manager_account_id
                - member_account_id
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/AccountRelation'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/account_relations/{account_relations_id}':
    get:
      tags:
        - アカウントの関連性
      description: 指定のアカウントの関連性情報を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: account_relationのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/AccountRelation'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    put:
      tags:
        - アカウントの関連性
      description: 指定のアカウントの関連性情報を更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: account_relationのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activated:
                  type: boolean
                  description: つながりを許可したか
                  example: true
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/AccountRelation'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    delete:
      tags:
        - アカウントの関連性
      description: 指定のアカウントの関連性情報を削除する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: account_relationのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: 削除成功
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /account:
    get:
      tags:
        - アカウント
      description: 現在ログインしているアカウントの情報を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Account'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - アカウント
      description: '上司 or 部下からの招待で作成する場合(with_account_relation, id)は AccountRelation、InitialRelationship、RelationshipPointも作成される。'
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                last_name:
                  type: string
                  description: 名
                  example: 太郎
                first_name:
                  type: string
                  description: 姓
                  example: 山田
                email:
                  type: string
                  description: メールアドレス
                  example: example@colere.inc
                icon:
                  type: string
                  description: アイコンのURL
                  example: icon@pmf.com
                gender:
                  type: string
                  description: 性
                  example: 男
              required:
                - email
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/Account'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    put:
      tags:
        - アカウント
      description: アカウント情報を更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                last_name:
                  type: string
                  description: 名
                  example: 太郎
                first_name:
                  type: string
                  description: 姓
                  example: 山田
                email:
                  type: string
                  description: メールアドレス
                  example: example@colere.inc
                icon:
                  type: string
                  description: アイコンのURL
                  example: icon@pmf.com
                gender:
                  type: string
                  description: 性
                  example: 男
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /accounts:
    get:
      tags:
        - アカウント
      description: アカウントをすべて取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/Account'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /changable_notifications:
    get:
      tags:
        - ポイント変化通知
      description: ログインしているアカウントのポイント変化通知一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/ChangableNotification'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/changable_notifications/{changable_notifications_id}':
    put:
      tags:
        - ポイント変化通知
      description: ログインしているアカウントのポイント変化通知一覧を更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: changable_notificationのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_read:
                  type: boolean
                  description: 既読したかどうか
                  example: true
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/ChangableNotification'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /external_apps:
    get:
      tags:
        - 外部連携アプリ
      description: ログインしているアカウントの連携した外部アプリ情報をすべて取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/ExternalApp'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/external_apps/{external_apps_id}':
    put:
      tags:
        - 外部連携アプリ
      description: 連携した外部アプリ情報を更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: external_appのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: 外部アプリへの遷移先URL(Custom URL Scheme含む)
                  example: 'instagram://app'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/ExternalApp'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /recommend_actions:
    get:
      tags:
        - アクション候補
      description: アクション一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/RecomendAction'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - アクション候補
      description: アクションを作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: あいさつしよう
                level:
                  type: string
                  description: どのレベルの関係性のときに候補として出すか(カンマ区切り)
                  example: '1,2,3'
                type:
                  type: string
                  description: タイプ
                  example: question
                tag_id:
                  type: string
                  description: AI分析用のタグ(カンマ区切り)
                  example: '1,3,8'
              required:
                - name
                - level
                - type
                - tag_id
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/RecomendAction'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/recommend_actions/{recommend_actions_id}':
    get:
      tags:
        - アクション
      description: 指定のアクションを取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: recommend_actionのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/RecomendAction'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    put:
      tags:
        - アクション
      description: 指定のアクションを更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: recommend_actionのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: あいさつしよう
                level:
                  type: string
                  description: どのレベルの関係性のときに候補として出すか(カンマ区切り)
                  example: '1,2,3'
                type:
                  type: string
                  description: タイプ
                  example: question
                tag_id:
                  type: string
                  description: AI分析用のタグ(カンマ区切り)
                  example: '1,3,8'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/RecomendAction'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    delete:
      tags:
        - アクション
      description: 指定のアクションを削除する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: recommend_actionのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: 削除成功
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/account_relations/{account_relations_id}/relationship_points?offset=10&limit=10&order=asc':
    get:
      tags:
        - 関係性レベルポイント
      description: 指定のaccount_relationの関係性レベルのポイントをすべてを取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: relationship_pointのID
        - in: query
          name: offset
          schema:
            type: integer
          description: 何件目から取得するか
        - in: query
          name: limit
          schema:
            type: integer
          description: 何件取得するか
        - in: query
          name: order
          schema:
            type: string
          description: 昇順(asc) or 降順(desc)
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/RelationPoint'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /relationship_points:
    get:
      tags:
        - 関係性レベルポイント
      description: 現在ログインしているアカウントに関連する関係性レベルのポイントをすべて取得する。<br>account_relationごとに最新の日付のもののみ取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/RelationPoint'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  /action_tags:
    get:
      tags:
        - アクションタグ
      description: アクションタグ一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - アクションタグ
      description: アクションタグを作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: 私生活
              required:
                - name
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/action_tags/{action_tags_id}':
    get:
      tags:
        - アクションタグ
      description: 指定のアクションタグを取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    put:
      tags:
        - アクションタグ
      description: 指定のアクションタグを更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: 私生活
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    delete:
      tags:
        - アクションタグ
      description: 指定のアクションタグを削除する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: 削除成功
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
components:
  schemas:
    AccountRelation:
      type: object
      description: アカウント同士の関連性
      properties:
        account_relation_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        manager_account_id:
          type: string
          description: 上司のアカウントID
          example: 0a1b2c3d4e5f6g7
        member_account_id:
          type: string
          description: 部下のアカウントID
          example: 0a1b2c3d4e5f6g7
        activated:
          type: boolean
          description: つながりを許可したか
          example: true
    Account:
      type: object
      description: アカウント
      properties:
        account_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        last_name:
          type: string
          description: 名
          example: 太郎
        first_name:
          type: string
          description: 姓
          example: 山田
        email:
          type: string
          description: メールアドレス
          example: example@colere.inc
        icon:
          type: string
          description: アイコンのURL
          example: icon@pmf.com
        gender:
          type: string
          description: 性
          example: 男
      required:
        - id
    ActionTag:
      type: object
      description: アクションタグ
      properties:
        action_tag_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        name:
          type: string
          description: 名前
          example: 私生活
    Action:
      type: object
      description: アクション
      properties:
        action_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        account_relation_id:
          type: string
          description: アカウント同士の関連性ID
          example: 0a1b2c3d4e5f6g7
        recomend_action_id:
          type: string
          description: アクション候補ID
          example: 0a1b2c3d4e5f6g7
        view_date:
          type: string
          description: 表示した日付
          example: 2022/01/01
        action_date:
          type: string
          description: 実行した日付
          example: 2022/01/02
    ChangableNotification:
      type: object
      description: ポイント変更通知
      properties:
        changable_notification_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        account_id:
          type: string
          description: 対象のアカウントID
          example: 0a1b2c3d4e5f6g7
        account_relation_id:
          type: string
          description: 対象のaccount_relationID
          example: 0a1b2c3d4e5f6g7
        point:
          type: integer
          description: ポイント
          example: 100
        date:
          type: string
          description: 日付
          example: 2022/01/01
        is_read:
          type: boolean
          description: 既読したかどうか
          example: true
    ExternalApp:
      type: object
      description: ポイント変更通知
      properties:
        external_app_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        account_id:
          type: string
          description: 対象のアカウントID
          example: 0a1b2c3d4e5f6g7
        name:
          type: string
          description: アプリの名前
          example: Microsoft Teams
        url:
          type: string
          description: 外部アプリへの遷移先URL(Custom URL Scheme含む)
          example: 'instagram://app'
    Feedback:
      type: object
      description: フィードバック
      properties:
        feedback_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        action_id:
          type: string
          description: actionID
          example: 0a1b2c3d4e5f6g7
        parent_feedback_id:
          type: string
          description: フィードバック先のfeedbackID。空ならアクションに対する最初のフィードバック。
          example: 0a1b2c3d4e5f6g7
        account_id:
          type: string
          description: feedbackしたアカウントID
          example: 0a1b2c3d4e5f6g7
        contents:
          type: string
          description: feedback内容
          example: よかったです。
    RecomendAction:
      type: object
      description: アクション
      properties:
        recomend_action_id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
          minLength: 15
          maxLength: 15
          pattern: '^[0-9a-z]$'
        name:
          type: string
          description: 名前
          example: あいさつしよう
        level:
          type: string
          description: どのレベルの関係性のときに候補として出すか(カンマ区切り)
          example: '1,2,3'
        type:
          type: string
          description: タイプ
          example: question
        tag_id:
          type: string
          description: AI分析用のタグ(カンマ区切り)
          example: '1,3,8'
    RelationPoint:
      type: object
      description: アカウント同士の関連性
      properties:
        account_relation_id:
          type: string
          description: アカウント同士の関連性ID
          example: 0a1b2c3d4e5f6g7
        point:
          type: integer
          description: ポイント
          example: 100
        date:
          type: string
          description: 作成された日付
          example: 2022/01/01
