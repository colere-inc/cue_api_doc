openapi: 3.0.0
info:
  version: 0.0.1
  title: PMF API Docment
  license:
    name: MIT
servers:
  - url: 'http://api.pmf.com'
paths:
  /action_tags:
    get:
      tags:
        - アクションタグ取得
      description: アクションタグ一覧を取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: null
                  $ref: '#/paths/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    post:
      tags:
        - アクションタグ作成
      description: アクションタグを作成する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: 私生活
              required:
                - name
      responses:
        '200':
          description: 作成成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/paths/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  '/action_tags/{action_tags_id}':
    get:
      tags:
        - アクションタグ取得
      description: 指定のアクションタグを取得する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/paths/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    put:
      tags:
        - アクションタグ更新
      description: 指定のアクションタグを更新する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 名前
                  example: 私生活
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties: null
                $ref: '#/paths/components/schemas/ActionTag'
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
    delete:
      tags:
        - アクションタグ削除
      description: 指定のアクションタグを削除する。
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            example: application/json
        - in: header
          name: X-Request-ID
          required: false
          schema:
            type: string
        - in: header
          name: 'Authorization: Bearer'
          required: true
          description: アクセストークン
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: action_tagのID
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: 削除成功
        '400':
          description: リクエストに問題あり
        '401':
          description: Authorizationヘッダーに問題あり
        '403':
          description: アクセス権がない
        '500':
          description: サーバーの一時的なエラー
  components:
    schemas:
      ActionTag:
        type: object
        description: アクションタグ
        properties:
          id:
            type: string
            description: ID
            example: 0a1b2c3d4e5f6g7
          name:
            type: string
            description: 名前
            example: 私生活
components:
  schemas:
    AccountRelation:
      type: object
      description: アカウント同士の関連性
      properties:
        id:
          type: string
          description: ID
          example: 0a1b2c3d4e5f6g7
        manager_account_id:
          type: string
          description: 上司のアカウントID
          example: 0a1b2c3d4e5f6g7
        member_account_id:
          type: string
          description: 部下のアカウントID
          example: 0a1b2c3d4e5f6g7
        activated:
          type: boolean
          description: つながりを許可したか
          example: true
    Account: !<tag:yaml.org,2002:js/undefined> ''
    ActionTag: !<tag:yaml.org,2002:js/undefined> ''
    Action: !<tag:yaml.org,2002:js/undefined> ''
    ChangableNotification: !<tag:yaml.org,2002:js/undefined> ''
    ExternalApp: !<tag:yaml.org,2002:js/undefined> ''
    Feedback: !<tag:yaml.org,2002:js/undefined> ''
    RecomendAction: !<tag:yaml.org,2002:js/undefined> ''
    RelationPoint: !<tag:yaml.org,2002:js/undefined> ''
